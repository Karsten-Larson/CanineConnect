@rendermode InteractiveServer

@using CanineConnect.StateObjects
@inject State state
@inject NavigationManager navigationManager

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
        <!-- Logo/Name -->
        <a href="#"> <img src="Images/Canine Connect Logo.png" alt="Avatar Logo" style="width:400px; border-radius: 20px;" class="navbar-brand mx-auto mb-2 mb-lg-0"> </a>

        <ul class="navbar-nav mx-auto mb-2 mb-lg-0">
            <!-- Tab 1 -->
            <li class="nav-item" >
                <a class="nav-link active" aria-current="page" href="#">Home</a>
            </li>
            <!-- Tab 2 (CHANGE REF TO CORRECT WEBPAGE)-->
            <li class="nav-item">
                <a class="nav-link" href="/doglistings">Dog Gallery</a>
            </li>
            <!-- Tab 3 -->
            <li class="nav-item">
                <a class="nav-link" href="events">Volunteer/Events</a>
            </li>
            <!-- Tab 4 (CHANGE REF TO CORRECT WEBPAGE)-->
            <li class="nav-item">
                <a class="nav-link" href="/faq">FAQ</a>
            </li>
        </ul>
    </div>

    <!-- Search (NOT FUNCTIONAL)-->
    <form class="d-flex" role="search">
        <input class="form-control me-2" type="search" placeholder="Search"
               aria-label="Search">
        <button class="btn btn-outline-success text-nowrap" type="submit">
            <i class="bi bi-search"></i> Search
        </button>
    </form>

    @if (!state.IsUser())
    {
        <ul class="nav navbar-nav me-auto">
            <!-- Tab 5 (CHANGE REF TO CORRECT WEBPAGE)-->
            <li class="nav-item">
                <a class="nav-link" href="/signup/user"> Sign Up</a>
            </li>
            <!-- Tab 6 (CHANGE REF TO CORRECT WEBPAGE)-->
            <li class="nav-item">
                <a class="nav-link" href="/login"> Login</a>
            </li>
        </ul>
    } else
    {
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" id="profileDropdown" role="button" @onclick="ToggleDropdown" aria-expanded="@dropdownVisible.ToString()">
                    @state.ActiveUser?.Email
                </a>

                <ul class="dropdown-menu" aria-labelledby="profileDropdown" style="@dropdownStyle">
                    <li><a class="dropdown-item" href="/profile/user/@state?.ActiveUser.Id.ToString()">Profile</a></li>
                    <li><a class="dropdown-item" href="#">Applications</a></li>
                    <li><a class="dropdown-item" href="/messages">Messages</a></li>
                  
                    @if (state.IsShelter())
                    {
                        <li><a class="dropdown-item" href="/profile/shelter/@state?.ActiveShelter.Id.ToString()">Shelter</a></li>
                    } else
                    {
                        <li><a class="dropdown-item" href="/shelter">Shelter</a></li>
                    }
                    <li><button class="dropdown-item" @onclick="SignOut">Sign Out</button></li>
                </ul>
            </li>
        </ul>
    }
</nav>

@code {
    protected override void OnInitialized()
    {
        state.Notify += () => InvokeAsync(StateHasChanged);

        base.OnInitialized();
    }

    private bool dropdownVisible = false;

    private string dropdownStyle => dropdownVisible ? "display:block;" : "display:none;";

    private void ToggleDropdown()
    {
        dropdownVisible = !dropdownVisible;
    }


    private void SignOut()
    {
        state.ActiveUser = null;
        navigationManager.NavigateTo("/");
    }
}